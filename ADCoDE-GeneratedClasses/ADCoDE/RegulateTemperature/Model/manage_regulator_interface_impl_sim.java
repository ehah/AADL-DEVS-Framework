/**
* generated by ADCoDE @ 2019-12-04 16:14:00
* This class represents DEVS coupled model for thread group manage_regulator_interface.impl
**/
package RegulateTemperature;

import java.awt.*;
import GenCol.*;
import model.modeling.*;
import model.simulation.*;	
import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;
import view.simView.*;
import component.structuredEntities.*;
import component.Iso_Types.*;			

public class manage_regulator_interface_impl_sim extends ViewableDigraph {
	
	public manage_regulator_interface_impl_sim() {
		super("manage_regulator_interface.impl");
		
		ViewableAtomic manage_status = new manage_status_impl_sim("manage_status");
		ViewableAtomic manage_display_temperature = new manage_display_temperature_impl_sim("manage_display_temperature");
		ViewableAtomic manage_interface_failure = new manage_interfaceFailure_desiredRange_impl_sim("manage_interface_failure");
		
		add(manage_status); 
		add(manage_display_temperature); 
		add(manage_interface_failure); 
		
		addInport("lower_desired_temperature"); 
		addInport("upper_desired_temperature"); 
		addInport("current_temperature"); 
		addInport("regulator_mode"); 
		addOutport("regulator_status"); 
		addOutport("display_temperature"); 
		addOutport("unspecified_temp"); 
		addOutport("regulator_interface_failure"); 
		addOutport("lower_desired_temp"); 
		addOutport("upper_desired_temp"); 
		
		addTestInput("regulator_mode", new stringEnt("NORMAL"));
		addTestInput("regulator_mode", new stringEnt("INIT"));
		addTestInput("regulator_mode", new stringEnt("FAILED"));
		addTestInput("current_temperature", new current_temperature(102, "Valid"));
		addTestInput("lower_desired_temperature", new lower_desired_temperature(97, "Valid"));
		addTestInput("lower_desired_temperature", new lower_desired_temperature(100, "Invalid"));
		addTestInput("upper_desired_temperature", new upper_desired_temperature(101, "Invalid"));
		addTestInput("upper_desired_temperature", new upper_desired_temperature(98, "Valid"));
		addTestInput("lower_desired_temp", new intEnt(98));
		addTestInput("regulator_interface_failure", new booleanEnt(true));
		
		addCoupling(this, "regulator_mode", manage_status, "regulator_mode");
		addCoupling(manage_status, "regulator_status", this, "regulator_status");
		addCoupling(this, "regulator_mode", manage_display_temperature, "regulator_mode");
		addCoupling(this, "current_temperature", manage_display_temperature, "current_temperature");
		addCoupling(manage_display_temperature, "display_temperature", this, "display_temperature");
		addCoupling(manage_display_temperature, "unspecified_temp", this, "unspecified_temp");
		addCoupling(this, "lower_desired_temperature", manage_interface_failure, "lower_desired_temperature");
		addCoupling(this, "upper_desired_temperature", manage_interface_failure, "upper_desired_temperature");
		addCoupling(manage_interface_failure, "lower_desired_temp", this, "lower_desired_temp");
		addCoupling(manage_interface_failure, "upper_desired_temp", this, "upper_desired_temp");
		addCoupling(manage_interface_failure, "regulator_interface_failure", this, "regulator_interface_failure");
		
	}
		
}
